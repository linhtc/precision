
var currTable = null;
var currPost = 'data';
var currView = 'view';
var currEpt = 'export';
var flagLoading = false;
var dTable = '#data-table';
var dateMap = {  };
var dateOpt = { limit: 5 };
var filterList = { auto:0, page:1, sort:0, type:'desc' };

var optimizer = {
    prepare: function(){
        var hashtag = window.location.hash;
        hashtag = hashtag.split('+');
        var query = location.search.substr(1);
        query.split("&").forEach(function(part) {
            var item = part.split("=");
            if(item[1] != undefined && item[1] != null){ filterList[item[0]] = decodeURIComponent(item[1]); }
        });
    },
    getData: function(page){
        if(flagLoading == true){
            return;
        }
        filterList.page = page;
        if(filterList.auto == 0){
            var windowHeight = $("html, body").innerHeight();
            var suggestPage = Math.round((windowHeight - 350) / 40);
            filterList.auto = suggestPage;
        }
        this.genParams();
        this.initLoading();
        flagLoading = true;
        window.history.replaceState(null, null, currView+'?'+this.genSearchUrl(filterList));
        var that = this;
        $.ajax({
            url: currPost,
            type: 'POST',
            data: filterList,
            dataType: 'JSON',
            async: true,
            success: function (data) {
                var domTable = $(dTable);
                that.genTable(domTable, data);
                that.genDelConfirm();
                flagLoading = false;
                that.destroyLoading();
                if(Object.keys(dateMap).length > 0){
                    for(var k in dateMap){
                        if(dateMap.hasOwnProperty(k)){
                            var picker = dateMap[k];
                            if(typeof picker.drops == 'string' && data.total > dateOpt.limit){
                                picker.drops = 'up';
                            } else{
                                picker.drops = 'down';
                            }
                        }
                    }
                }
            },
            error: function(err){
                flagLoading = false;
                console.log(err.message);
                that.destroyLoading();
            },
        });
    },
    exportData: function(that){
        console.log(that);
        this.genParams();
        this.initLoading(that);
        window.location = currEpt+'?'+this.genSearchUrl(filterList);
        this.destroyLoading(that);
    },
    genTable: function(domTable, data){
        var that = this;
        if(currTable != null){
            domTable.dataTable().fnDestroy();
            domTable.find('tbody').html(data.html);
        }
        currTable = domTable.dataTable({
            language: {
                "search": "Tìm Kiếm:",
                "paginate": {
                    "first": "Trang Đầu",
                    "last": "Trang Cuối",
                    "next": "Tiếp",
                    "previous": "Lùi"
                },
                "info": "Hiện _START_ đến _END_ của _TOTAL_ dòng",
                "emptyTable": "Không có dữ liệu",
                "lengthMenu": "Hiện _MENU_ dòng",
                "infoFiltered":   "(Đã lọc từ tổng _MAX_ dòng)",
            },
            filter: false,
            bPaginate: false,
            bInfo: false,
            /*pageLength: data.per,*/
            /*lengthMenu: [[20, 40, 100, -1], [20, 40, 100, "All"]],*/

            order: [ [data.sort, data.type] ],

            /*dom: 'Bfrtip',*/
            /*buttons: [
             'csv', 'excel', 'pdf', 'print'
             ],*/
            destroy: true,
            /*            responsive: true,*/
        });
        if(data.num < 2){
            $('#page-selection').hide();
        } else{
            $('#page-selection').show();
            $('#page-selection').bootpag({
                page: data.page,
                total: data.num,
                maxVisible: 5
            }).on("page", function(event, num){
                that.getData(num);
            });
        }
        currTable.on('click', 'thead th', function(e) {
            var info = currTable.fnSettings().aaSorting;
            var sortIndex = info[0][0];
            var sortType = info[0][1];
            if(sortType == null){ sortType = 'desc'; }
            filterList['sort'] = sortIndex;
            filterList['type'] = sortType;
            if(data.num < 2){
                window.history.replaceState(null, null, currView+'?'+that.genSearchUrl(filterList));
            } else{
                that.getData(1);
            }
        });
        /*currTable.on('click.DT', function(e) {
            e.preventDefault();
             return false;
        });*/
        $('.total-rows').text(data.total);
    },
    genDelConfirm: function(){
        var that = this;
        if(typeof areYouSure == 'undefined'){ areYouSure = 'Are you sure?'; }
        if(typeof okButton == 'undefined'){ okButton = 'OK'; }
        if(typeof cancelButton == 'undefined'){ cancelButton = 'Cancel'; }
        var anchors = $('.a-confirmation');
        if(anchors.length > 0){
        	for(var i=0; i < anchors.length; i++){
        		var item = $(anchors[i]);
        		var colorClass = item.attr('class');
        		var color = 'btn-info';
        		if(colorClass.indexOf('warning') > 0){
        			color = 'btn-warning';
        		} else if(colorClass.indexOf('danger') > 0){
        			color = 'btn-danger';
        		}
        		item.confirmation({
                    onConfirm: function(event, element) {
                        that.initLoading();
                        var infoID = $(element[0]).attr('info-id');
                        var infoAction = $(element[0]).attr('info-action');
                        $.post(infoAction, { id: infoID }, function (data) {
                            that.destroyLoading();
                            toastr.remove();
                            if (data == 1) {
                                toastr.success(langRootComplete, langRootNotify);
                                that.getData(filterList['page']);
                                if(typeof playback == 'function'){
                                    playback();
                                }
                            } else{
                                toastr.error(langRootError, langRootNotify);
                            }
                        });
                    },
                    onCancel: function() {

                    },
                    popout: true,
                    title: areYouSure,
                    placement: 'left',
                    btnOkClass: 'btn btn-sm '+color,
                    btnOkLabel: okButton,
                    btnCancelLabel: cancelButton,
                });
        	}
        }
    },
    genSearchUrl: function(jObject){
        var searchString = '';
        for(var key in jObject){
            if(jObject.hasOwnProperty(key)){
                searchString += (searchString == '' ? '' : '&') +key+'='+jObject[key];
            }
        }
        return searchString;
    },
    initLoading: function(dom){
        if(typeof dom == 'undefined'){
            dom = $('.content');
        }
        console.log(typeof dom);
        if(typeof dom != 'object' && typeof dom == 'string'){
            dom = $('.'+dom);
        }
        if(typeof dom.block == 'undefined'){
            console.log('invalid dom...');
            return false;
        }
        dom.block({
            message: '<i class="fa fa-spinner fa-pulse fa-fw"></i>',
            themedCSS: {
                width:  '30%',
                top:    '0%',
                left:   '0%'
            },
            css: {
                border: 'none',
                background: 'none',
                color: '#ffffff'
            }
        });
    },
    destroyLoading: function(dom){
        if(typeof dom == 'undefined'){
            dom = $('.content');
        }
        if(typeof dom != 'object' && typeof dom == 'string'){
            dom = $('.'+dom);
        }
        if(typeof dom.block == 'undefined'){
            console.log('invalid dom...');
            return false;
        }
        $(dom).unblock();
    },
    refreshPage: function(){
        filterList['sort'] = 0;
        filterList['type'] = 'desc';
        $('.params').val('');
        $('.selectpicker').selectpicker('val', '');
        $('.selectpicker').selectpicker('deselectAll');
        this.getData(1);
    },
    genParams: function(){
        $( ".params" ).each(function( index ) {
            var proptype = $( this ).prop('type'), cvalue = $( this ).val(), cid = $( this ).attr('id');
            if(proptype == undefined){ proptype = ''; }
            if(proptype.indexOf('select') >= 0){ cvalue = $( this ).selectpicker('val'); }
            if(cvalue === null){ cvalue= ''; }
            if(cid != null && cid != '') { filterList[cid] = cvalue; }
        });
    },
    getGiftByCampaign: function(val){
        var campaign = $('#campaign').selectpicker('val');
        $.ajax({
            url: 'gift',
            type: 'POST',
            data: { campaign: campaign },
            dataType: 'JSON',
            async: true,
            success: function (data) {
                $('#gift').html(data.html);
                $('#gift').selectpicker('refresh');
                if(val != undefined){
                    /*$('#gift').selectpicker('val', val.split(','));*/
                }
            },
            error: function(err){
                console.log(err.message);
            },
        });
    },
    genDatePicker: function(eid){
        var that = this;
        $('#'+eid).daterangepicker({
            "timePicker": true,
            "timePicker24Hour": true,
            "autoApply": false,
            "autoUpdateInput": false,
            "locale": {
                "format": langRootDateFormat,
                "separator": " - ",
                "applyLabel": langRootOK,
                "cancelLabel": langRootCancel,
                "fromLabel": langRootFrom,
                "toLabel": langRootTo,
                "customRangeLabel": "Custom",
                "weekLabel": "W",
                "daysOfWeek": langRootDaysOfWeek, /*in default.tpl*/
                "monthNames": langRootMonthNames,
                "firstDay": 1
            },
            "linkedCalendars": false,
            opens: "center",
            drops: "up",
            parentEl: "body"
        }, function(that){
            dateMap[eid] = that;
        }).on('show.daterangepicker', function(ev, picker) {
            /*console.log(ev);*/
        }).on('cancel.daterangepicker', function(ev, picker) {
            $('#'+eid).val('');
            that.getData(1);
        }).on('apply.daterangepicker', function(ev, picker) {
            /*console.log(picker.startDate.format('YYYY-MM-DD'));
             console.log(picker.endDate.format('YYYY-MM-DD'));*/
            $('#'+eid).val(picker.startDate.format(langRootDateFormat)+' - '+picker.endDate.format(langRootDateFormat));
            that.getData(1);
        });
        $('#'+eid).val('');
    }
};
